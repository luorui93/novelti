<?xml version="1.0"?>
<launch>
    <arg name="div"   default="extredist" />     <!-- map division policy:       vtile  htile  equidist  extremal -->
    <arg name="pos"   default="nearcog_obst" />  <!-- best_pose_finder method:   ra_maxprob  maxprob_euc  maxprob_obst  cog_euc  nearcog_euc  nearcog_obst  cog2lopt  cog2gopt -->
    <arg name="start" default="door1" />
    <arg name="dst" default="music1" />
    <arg name="period" default="3.0" />        <!-- interface period -->
    <arg name="mx"    default="mx85" />      <!-- name of interface matrix (see below)--> 
    <arg name="use_pois" default="0" />
    <arg name="iarea_k" default="0.5" />
    <arg name="view_sizes" default="[16, 32, 64, 128, 256]" />
    <arg name="smooth_rads" default="[]" />
    
    <arg name="vel"   default="0.5" />       <!-- robot velocity in m/s -->
    <arg name="popt"  default="equal" />     <!-- name of the list with optimal probabilities (see probs_optimal below) -->
    
    <arg name="prob_thresh_high" default="0.99" />    <!-- if (vertex prob >= prob_thresh_high), then it's inferred as the destination -->
    <arg name="prob_thresh_low"  default="0.5" />     <!-- if (vertex prob <= prob_thresh_low),  then prob_thresh_high is considered again -->
    <arg name="prob_eps"         default="1.0e-8" /> <!-- inference_unit doesn't let probability of any vertex to be lower than prob_eps -->
    <arg name="ksafe"  default="1.3" />
    <arg name="trobot"  default="0.025" />
    
    <arg name="map"   default="AH" /> <!-- base name of the map from the map directory (without extension .map) -->
    <arg name="resol" default="0.1" />      <!-- size of a cell on the grid map (in meters) -->
    
    <arg name="real_robot" default="1" />
    
    <arg name="bag" default="1" />
    <arg name="record_video" default="1" />
    
    <!--arg name="bagpath" default="/tmp/tmp.bag" /-->
    <arg name="by_key" default="0" />
    <arg name="rviz" default="robot_autocam" /> <!-- none, autocam or static -->
    
    <arg name="verb" default="info" />

    <!--arg name="monitor" default="1" /- ->
    <!- -arg name="monitor_output_prefix" default="$(arg output_dir)/$(arg output_file_prefix)_statistics_" /-->
    
    
    <arg name="robot_map_file" value="$(find ak_labs)/pgm/$(arg map).yaml" />
    <arg name="lthmi_map_file" value="$(find ak_labs)/map/$(arg map)_10cm_inf8.map" />
    
    
    <!--predefined selectable parameters -->
    <rosparam>
        probs_optimal: 
            equal:  [0.25, 0.25, 0.25, 0.25]
    </rosparam>
    <rosparam>
        mx100:  [1.0, 0.0, 0.0, 0.0,        0.0, 1.0, 0.0, 0.0,         0.0, 0.0, 1.0, 0.0,         0.0, 0.0, 0.0, 1.0,]
        mx97:   [0.97, 0.01, 0.01, 0.01,    0.01, 0.97, 0.01, 0.01,     0.01, 0.01, 0.97, 0.01,     0.01, 0.01, 0.01, 0.97,]
        mx94:   [0.94, 0.02, 0.02, 0.02,    0.02, 0.94, 0.02, 0.02,     0.02, 0.02, 0.94, 0.02,     0.02, 0.02, 0.02, 0.94,]
        mx91:   [0.91, 0.03, 0.03, 0.03,    0.03, 0.91, 0.03, 0.03,     0.03, 0.03, 0.91, 0.03,     0.03, 0.03, 0.03, 0.91,]
        mx85:   [0.85, 0.05, 0.05, 0.05,    0.05, 0.85, 0.05, 0.05,     0.05, 0.05, 0.85, 0.05,     0.05, 0.05, 0.05, 0.85,]
        mx79:   [0.79, 0.07, 0.07, 0.07,    0.07, 0.79, 0.07, 0.07,     0.07, 0.07, 0.79, 0.07,     0.07, 0.07, 0.07, 0.79,]
        mx70:   [0.7 , 0.1 , 0.1 , 0.1 ,    0.1 , 0.7 , 0.1 , 0.1 ,     0.1 , 0.1 , 0.7 , 0.1 ,     0.1 , 0.1 , 0.1 , 0.7 ,]
        mx61:   [0.61, 0.13, 0.13, 0.13,    0.13, 0.61, 0.13, 0.13,     0.13, 0.13, 0.61, 0.13,     0.13, 0.13, 0.13, 0.61,]
        mx55:   [0.55, 0.15, 0.15, 0.15,    0.15, 0.55, 0.15, 0.15,     0.15, 0.15, 0.55, 0.15,     0.15, 0.15, 0.15, 0.55,]
        mx49:   [0.49, 0.17, 0.17, 0.17,    0.17, 0.49, 0.17, 0.17,     0.17, 0.17, 0.49, 0.17,     0.17, 0.17, 0.17, 0.49,]
        mx40:   [0.4 , 0.2 , 0.2 , 0.2 ,    0.2 , 0.4 , 0.2 , 0.2 ,     0.2 , 0.2 , 0.4 , 0.2 ,     0.2 , 0.2 , 0.2 , 0.4 ,]
        mx31:   [0.31, 0.23, 0.23, 0.23,    0.23, 0.31, 0.23, 0.23,     0.23, 0.23, 0.31, 0.23,     0.23, 0.23, 0.23, 0.31,]
    </rosparam>
    <rosparam>
        synced_nodes: 
            real_robot0: ['/inference_unit', '/best_pose_finder', '/map_divider', '/lthmi_model', 'robot_model', ]
            real_robot1: ['/inference_unit', '/best_pose_finder', '/map_divider', '/lthmi_model',  ]
    </rosparam>
    
    <rosparam>
        predefined_poses: 
            door1:      
                x: 11.78
                y: 1.85
                yaw: 1.57079
            livroom1:   
                x: 8.7
                y: 20.0
                yaw: 1.57079
            office1:   
                x: 17.1
                y: 15.5
                yaw: 0.0
            bathroom1:   
                x: 3.4
                y: 1.9
                yaw: 1.57079
            music1:   
                x: 13.8
                y: 23.4
                yaw: 0.0
            bedroom1:   
                x: 14.5
                y: 19.4
                yaw: 3.14159
            door2:
                x: 9.0
                y: 3.4
                yaw: 1.57079
    </rosparam>
    
    
    <arg name="init_x" value="11.78" />
    <arg name="init_y" value="1.85" />
    <arg name="init_yaw" value="1.57079" />
    
    <node if="$(arg record_video)" name="vlc_recorded" pkg="lthmi_nav" type="record_screen.sh" />
    
    <node if="$(arg real_robot)" name="robot_rviz" pkg="rviz" type="rviz"  output="screen" 
        args="-d $(find lthmi_nav)/rviz/robot.rviz" />
    
    <!-- Recording -->
    <node if="$(arg bag)"  pkg="rosbag" type="record" name="rosbag_record" required="true"
            args=" /rosout /map /pose_intended /pose_current /pose_best /pose_inferred /cmd_intended /cmd_detected /pdf /map_divided /parameters /pose_arrived /amcl_pose /map_inflated     /lidar_battery_sym/scan /lidar_footplate/scan /odom /tf /move_base/local_costmap/footprint /pose_intended_goal /cmd_vel">
        <!-- -O $(arg bagpath)                polygon, local costmap,  /odom /lidar1 /lidar2 -->
    </node>
    <arg name="waited_srvs_name" default="/waited_srvs/mode$(arg bag)" />
    <node if="$(arg bag)"  pkg="lthmi_nav" type="node_param_publisher.py" name="node_param_publisher">
        <param name="rosbag_node_name" value="rosbag_record" />
        <!-- remapped parameters (by default not save on param server-->
        <param name="map" value="$(arg map)" />
        <param name="mx" value="$(arg mx)" />
        <!--param name="path" value="$(arg path)" /-->
        <param name="popt" value="$(arg popt)" />
        <param name="bag" value="$(arg bag)" />
        <param name="waited_srvs_name" value="$(arg waited_srvs_name)" />
        <param name="rviz" value="$(arg rviz)" />
        <param name="start_pose_name" value="$(arg start)" />
        <param name="destination_pose_name" value="$(arg dst)" />
        <param name="commit"     command="git --git-dir=$(find lthmi_nav)/../.git --work-tree=$(find lthmi_nav)/..  log --format='%H' -n 1" />
        <param name="commit_log" command="git --git-dir=$(find lthmi_nav)/../.git --work-tree=$(find lthmi_nav)/..  log -n 1" />
        <param name="comp_id" command="cat /var/lib/dbus/machine-id" /> <!-- http://0pointer.de/blog/projects/ids.html -->
    </node>
    
    
    <!-- ROBOT real or model -->
    <node pkg="lthmi_nav" type="node_mediator.py" name="node_mediator" 
            output="screen" required="true">
        <remap from="/pose_desired" to="/pose_best" />
        <remap from="~goal_x" to="/predefined_poses/$(arg dst)/x" />
        <remap from="~goal_y" to="/predefined_poses/$(arg dst)/y" />
        <remap from="~goal_yaw" to="/predefined_poses/$(arg dst)yaw" />
        <param name="map" value="$(arg lthmi_map_file)" />
        <param name="resolution" value="0.1" />
        <param name="real_robot" value="$(arg real_robot)" />
        <remap from="/map" to="/map_inflated" />
        <remap from="~synced_nodes" to="/synced_nodes/real_robot$(arg real_robot)"/>
        <rosparam>
            waited_srvs:  ['/lthmi_rviz/reload_shaders']
        </rosparam>
    </node>
    
    <remap from="/amcl/initial_pose_x" to="/predefined_poses/$(arg start)/x" />
    <remap from="/amcl/initial_pose_y" to="/predefined_poses/$(arg start)/y" />
    <remap from="/amcl/initial_pose_a" to="/predefined_poses/$(arg start)/yaw" />

    <include if="$(arg real_robot)" file="$(find anna)/launch/main.launch">
        <arg name="ui1" value="none" />
        <arg name="ui2" value="none" />
        <arg name="ui3" value="none" />
        <arg name="rviz" value="0" />
        
        <!--arg name="init_x" value="none" />
        <arg name="init_y" value="none" />
        <arg name="init_z" value="none" /-->

        <!--remap from="~init_x" to="/predefined_poses/$(arg start)/x" />
        <remap from="~init_y" to="/predefined_poses/$(arg start)/y" />
        <remap from="~init_yaw" to="/predefined_poses/$(arg start)/yaw" /-->
        
        <arg name="assist" value="0" />
        <arg name="auto" value="1" />
        <arg name="cliff" value="0" />
        <arg name="map_file" value="$(find ak_labs)/pgm/AH.yaml" />
    </include>
    
    
    
    <node unless="$(arg real_robot)" pkg="lthmi_nav" type="robot_model" name="robot_model" output="screen" required="true">
        <remap from="/pose_desired" to="/pose_best" />
        <param name="max_vel"     value="$(arg vel)" />
        <param name="pub_period"  value="$(arg trobot)" />
    </node>
    
    
    <!-- Environment -->
    <node pkg="lthmi_nav" type="node_lthmi_model.py" name="lthmi_model" output="screen" required="true">
        <remap from="~interface_matrix" to="/$(arg mx)"/>
        <param name="period" value="$(arg period)"/>
        <param unless="$(arg by_key)" name="random_if_missed" value="true"/>
    </node>
    <node pkg="lthmi_nav" type="node_keyboard_commander.py" name="keyboard_commander" output="screen" required="true">
        <rosparam>
            key_mappings: ['y','b','o','t']
            new_goal_key: '`'
        </rosparam>
    </node>
    
    
    
    <!-- Shared Control -->
    <arg name="debug_inference" default="0" />
    <arg     if="$(arg debug_inference)" name="prefix_inference" default="xterm -geometry 170x30+10+20 -e gdb -x=$(find lthmi_nav)/debug/gdb_inference_unit - -args" />
    <arg unless="$(arg debug_inference)" name="prefix_inference" default="" />    
    <node pkg="lthmi_nav" type="inference_unit" name="inference_unit" output="screen" required="true" launch-prefix="$(arg prefix_inference)">
        <remap from="~interface_matrix" to="/$(arg mx)"/>
        <param name="thresh_high" value="$(arg prob_thresh_high)" />
        <param name="thresh_low"  value="$(arg prob_thresh_low)" />
        <param name="eps"         value="$(arg prob_eps)" />
        <param name="check_sync"  value="false" />
        <param name="reset_pdf_on_new"  value="true" />
        <param name="interest_area_coef" value="$(arg iarea_k)" /> <!-- bigger coef, smaller interest area )-->
        <rosparam if="$(arg use_pois)" param="pois" > <!-- x1, y1, sigma1, k1,    x2, y2, sigma2, k2, ...     118, 19, 5.0, 1.0,    171,155, 15.0, 2.5,     34,19, 20.0, 1.5,     138,234, 25.0, 3.0,     145,194, 10.0, 2.0,] -->
            [87,200, 2.0, 2.0,      118,19, 1.0, 1.2,    171,155, 2.5, 2.4,     34,19, 1.5, 2.1,     138,234, 1.0, 1.9,     145,194, 1.2, 1.7,     900,341, 2.3, 1.5]
        </rosparam>
        <rosparam param="view_sizes"  subst_value="true">$(arg view_sizes)</rosparam>
        <rosparam param="smooth_rads" subst_value="true">$(arg smooth_rads)</rosparam>
    </node>
    <node pkg="lthmi_nav" type="best_pose_finder" name="best_pose_finder" output="screen" required="true">
        <param name="method"      value="$(arg pos)" />
        <param name="max_vel"     value="$(arg vel)" />
        <param name="safety_coef" value="$(arg ksafe)" />
        <param name="period"      value="$(arg period)" />
    </node>
    <node pkg="lthmi_nav" type="map_divider" name="map_divider" output="screen" required="true"> <!--launch-prefix="xterm -geometry 200x30+10+20 -e gdb - -args"-->
        <remap from="~probs_optimal"    to="/probs_optimal/$(arg popt)"/>
        <param name="method"            value="$(arg div)" />
    </node>
    
    
    <!-- Visualization -->
    <include file="$(find lthmi_nav)/launch/rviz_$(arg rviz).launch"/>
    


   <!-- Monitoring - ->
    <node if="$(arg monitor)" pkg="lthmi_nav" type="monitor.py" name="monitor" output="screen">
        <param name="output_prefix" value="$(arg monitor_output_prefix)"/>
    </node>-->

</launch>




