<?xml version="1.0"?>
<launch>
    <arg name="div"   default="vtile" />     <!-- map division policy:       vtile  htile  equidist  extremal -->
    <arg name="pos"   default="maxprob_obst" />  <!-- best_pose_finder method:   ra_maxprob  maxprob_euq  maxprob_obst  cog_euq  nearcog_euq  nearcog_obst  cog2lopt  cog2gopt -->
    <arg name="vel"   default="2.0" />       <!-- robot velocity in m/s -->
    <arg name="T"     default="1.0" />        <!-- interface period -->
    <arg name="mx"    default="mx100" />      <!-- name of interface matrix (see below)-->   
    <arg name="popt"  default="equal" />     <!-- name of the list with optimal probabilities (see probs_optimal below) -->
    
    <arg name="prob_thresh_high" default="0.99" />    <!-- if (vertex prob >= prob_thresh_high), then it's inferred as the destination -->
    <arg name="prob_thresh_low"  default="0.5" />     <!-- if (vertex prob <= prob_thresh_low),  then prob_thresh_high is considered again -->
    <arg name="prob_eps"         default="1.0e-8" /> <!-- inference_unit doesn't let probability of any vertex to be lower than prob_eps -->
    <arg name="ksafe" default="0.9" />
    
    

    <arg name="map"   default="ak500inflated" /> <!-- base name of the map from the map directory (without extension .map) -->
    <arg name="path"  default="10" />        <!-- index of the path from map/YOUR_MAP_NAME.paths file -->
    <arg name="resol" default="0.1" />      <!-- size of a cell on the grid map (in meters) -->
    <arg name="tries" default="1" />
    

    <!--arg name="outdir" /-->
    
    <arg name="rosbag" default="1" />
    <!--arg name="monitor" default="1" />
    <arg name="output_dir" default="$(find lthmi_nav)/exp/$(arg expset)" />-->
    <arg name="by_key" default="0" />
    
    <arg name="rviz" default="static" /> <!-- none, autocam or static -->
    

    
    
    <!--arg name="output_file_prefix" default="$(arg expset)_$(arg div)_$(arg pos)_$(arg mx)_T=$(arg T)_V=$(arg vel)" />
    <arg name="record_to" default="$(arg output_dir)/$(arg output_file_prefix).bag" />
    <arg name="monitor_output_prefix" default="$(arg output_dir)/$(arg output_file_prefix)_statistics_" /-->
    
    <rosparam command="load" file="$(find lthmi_nav)/map/$(arg map).paths"/>
    
    <rosparam>
        qwe: [1, 2, 3]
    </rosparam>
    
    <rosparam>
        probs_optimal: 
            equal:  [0.25, 0.25, 0.25, 0.25]
    </rosparam>
    
    
    <rosparam>
        <!--mx100:  [[1.0, 0.0, 0.0, 0.0],     [0.0, 1.0, 0.0, 0.0],     [0.0, 0.0, 1.0, 0.0],     [0.0, 0.0, 0.0, 1.0],]
        mx91:   [[0.91, 0.03, 0.03, 0.03], [0.03, 0.91, 0.03, 0.03], [0.03, 0.03, 0.91, 0.03], [0.03, 0.03, 0.03, 0.91],]
        mx85:   [[0.85, 0.05, 0.05, 0.05], [0.05, 0.85, 0.05, 0.05], [0.05, 0.05, 0.85, 0.05], [0.05, 0.05, 0.05, 0.85],]
        mx55:   [[0.55, 0.15, 0.15, 0.15], [0.15, 0.55, 0.15, 0.15], [0.15, 0.15, 0.55, 0.15], [0.15, 0.15, 0.15, 0.55],]-->
        mx100:  [1.0, 0.0, 0.0, 0.0,        0.0, 1.0, 0.0, 0.0,         0.0, 0.0, 1.0, 0.0,         0.0, 0.0, 0.0, 1.0,]
        mx91:   [0.91, 0.03, 0.03, 0.03,    0.03, 0.91, 0.03, 0.03,     0.03, 0.03, 0.91, 0.03,     0.03, 0.03, 0.03, 0.91,]
        mx85:   [0.85, 0.05, 0.05, 0.05,    0.05, 0.85, 0.05, 0.05,     0.05, 0.05, 0.85, 0.05,     0.05, 0.05, 0.05, 0.85,]
        mx55:   [0.55, 0.15, 0.15, 0.15,    0.15, 0.55, 0.15, 0.15,     0.15, 0.15, 0.55, 0.15,     0.15, 0.15, 0.15, 0.55,]
    </rosparam>
    
    <node pkg="lthmi_nav" type="node_experimentator.py" name="experimentator" output="screen" required="true" >
        <param name="map" value="$(find lthmi_nav)/map/$(arg map).map" />
        <remap from="~poses" to="/paths/$(arg path)"/>
        <param name="resol" value="$(arg resol)" />
        <param name="n_runs" value="$(arg tries)" />
        <rosparam>
            synced_nodes: ['/inference_unit', '/robot_model', '/best_pose_finder', '/map_divider', '/lthmi_model', '/human_model', ]
            waited_srvs: ['/rviz/reload_shaders', ]
        </rosparam> <!--  '/rosbag_record/get_loggers' -->
    </node>
    
    
    <!-- Environment model -->
    <node pkg="lthmi_nav" type="robot_model" name="robot_model" output="screen" >
        <remap from="/pose_desired" to="/pose_best" />
        <param name="max_vel"     value="$(arg vel)" />
        <param name="pub_period"  value="0.025" />
    </node>
    <node pkg="lthmi_nav" type="node_human_model.py" name="human_model" output="screen"> </node>
    <node pkg="lthmi_nav" type="node_lthmi_model.py" name="lthmi_model" output="screen" >
        <param name="number_of_commands" value="4" />
        <remap from="~interface_matrix" to="/$(arg mx)"/>
        <param if="$(arg by_key)"     name="delay" value="0.0"/>
        <param unless="$(arg by_key)" name="delay" value="$(arg T)"/>
    </node>
    
    
    <!-- Shared Control -->
    <node pkg="lthmi_nav" type="inference_unit" name="inference_unit" output="screen" >
        <remap from="~interface_matrix" to="/$(arg mx)"/>
        <param name="thresh_high" value="$(arg prob_thresh_high)" />
        <param name="thresh_low"  value="$(arg prob_thresh_low)" />
        <param name="eps"         value="$(arg prob_eps)" />
    </node>
    <node pkg="lthmi_nav" type="best_pose_finder" name="best_pose_finder" output="screen" >
        <param name="method"      value="$(arg pos)" />
        <param name="max_vel"     value="$(arg vel)" />
        <param name="safety_coef" value="$(arg ksafe)" />
        <param name="period"      value="$(arg T)" />
    </node>
    <node pkg="lthmi_nav" type="map_divider" name="map_divider" output="screen" > <!--launch-prefix="xterm -geometry 200x30+10+20 -e gdb - -args"-->
        <remap from="~probs_optimal"    to="/probs_optimal/$(arg popt)"/>
        <param name="method"            value="$(arg div)" />
    </node>
    
    
    <!-- Visualization -->
    <include file="$(find lthmi_nav)/launch/rviz_$(arg rviz).launch"/>
    
    <!-- Recording -->
    <!--node if="$(arg record)"  pkg="rosbag" type="record" name="rosbag_record"
       args="-O $(arg record_to) /rosout /map /pose_intended /pose_current /pose_optimal /pose_inferred /cmd_intended /cmd_detected /pdf /map_divided" /-->

   <!-- Monitoring - ->
    <node if="$(arg monitor)" pkg="lthmi_nav" type="monitor.py" name="monitor" output="screen">
        <param name="output_prefix" value="$(arg monitor_output_prefix)"/>
    </node>-->

</launch>
