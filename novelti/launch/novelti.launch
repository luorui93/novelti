<?xml version="1.0"?>
<launch>
    <arg name="bagpath" default="/tmp/tmp.bag" />
    
    <arg name="div"   default="extredist" />     <!-- map division policy:       vtile  htile  altertile equidist extremal extredist vchess-->
    <arg name="pos"   default="nearcog_obst" />  <!-- best_pose_finder method:   ra_maxprob  maxprob_euq  maxprob_obst  cog_euq  nearcog_euq  nearcog_obst  cog2lopt  cog2gopt -->
    <arg name="start" default="door1" />
    <arg name="dst" default="music1" />
    <arg name="dst2" default="storage1" />
    <arg name="vel"   default="1.0" />       <!-- robot velocity in m/s -->
    <arg name="twist" default="0.52" />       <!-- robot rotation speed in rad/s -->
    <arg name="delay" default="3.0" />        <!-- interface delay -->
    <arg name="period" default="0.0" />       <!-- interface cmd generation period-->
    <arg name="mx"    default="mx85" />      <!-- name of interface matrix (see below)-->   
    <arg name="popt"  default="equal" />     <!-- name of the list with optimal probabilities (see probs_optimal below) -->
    <arg name="reset_pdf"    default="true" /> 
    <arg name="pub_random_goal"    default="true" /> 

    <arg name="use_pois" default="0" />
    <arg name="iarea_k" default="0.5" />
    <arg name="view_sizes" default="[16, 32, 64, 128, 256]" />
    <arg name="smooth_rads" default="[0,0,1,2,2]" />
    <arg name="show_goal" default="false" />

    <arg name="prob_thresh_high" default="0.95" />    <!-- if (vertex prob >= prob_thresh_high), then it's inferred as the destination -->
    <arg name="prob_thresh_low"  default="0.5" />     <!-- if (vertex prob <= prob_thresh_low),  then prob_thresh_high is considered again -->
    <arg name="prob_eps"         default="1.0e-8" /> <!-- inference_unit doesn't let probability of any vertex to be lower than prob_eps -->
    <arg name="ksafe" default="0.9" />
    <arg name="trobot" default="0.025" />
    
    <arg name="map"   default="ak500inflated" /> <!-- base name of the map from the map directory (without extension .map) -->
    <arg name="path"  default="2" />        <!-- index of the path from map/YOUR_MAP_NAME.paths file -->
    <arg name="resol" default="0.1" />      <!-- size of a cell on the grid map (in meters) -->
    <arg name="tries" default="2" />
    

    <arg name="bag" default="1" />
    <arg name="record_video" default="0" /> 
    <arg name="by_key" default="0" />
   
    <arg name="rviz" default="robot_autocam"/>
    <!--<arg if="$(arg show_goal)"     name="rviz" default="robot_autocam_w_goal" /> --> <!-- none, autocam or static -->
    <!--<arg unless="$(arg show_goal)" name="rviz" default="robot_autocam" /> --> <!-- none, autocam or static -->
    <arg name="verb" default="info" />
    
    <arg name="experiment" default="1" />
    <arg name="real_robot" default="false" />
    <arg name="real_human" default="1" />
    <arg name="real_interface" default="false" />

    <arg name="single_node" default="1" />
    
    <arg name="new_goal_topic" default="/novelti_shared_control/new_goal" if="$(arg single_node)"/>
    <arg name="new_goal_topic" default="/inference_unit/new_goal" unless="$(arg single_node)" />



    <!--arg name="monitor" default="1" /- ->
    <!- -arg name="monitor_output_prefix" default="$(arg output_dir)/$(arg output_file_prefix)_statistics_" /-->
    
    
    <!--predefined selectable parameters -->
    <rosparam command="load" file="$(find novelti)/map/$(arg map).paths"/>
    <rosparam>
        probs_optimal: 
            equal:  [0.25, 0.25, 0.25, 0.25]
    </rosparam>
    <rosparam>
        mx100:  [1.0, 0.0, 0.0, 0.0,        0.0, 1.0, 0.0, 0.0,         0.0, 0.0, 1.0, 0.0,         0.0, 0.0, 0.0, 1.0,]
        mx91:   [0.91, 0.03, 0.03, 0.03,    0.03, 0.91, 0.03, 0.03,     0.03, 0.03, 0.91, 0.03,     0.03, 0.03, 0.03, 0.91,]
        mx85:   [0.85, 0.05, 0.05, 0.05,    0.05, 0.85, 0.05, 0.05,     0.05, 0.05, 0.85, 0.05,     0.05, 0.05, 0.05, 0.85,]
        mx79:   [0.79, 0.07, 0.07, 0.07,    0.07, 0.79, 0.07, 0.07,     0.07, 0.07, 0.79, 0.07,     0.07, 0.07, 0.07, 0.79,]
        mx70:   [0.7 , 0.1 , 0.1 , 0.1 ,    0.1 , 0.7 , 0.1 , 0.1 ,     0.1 , 0.1 , 0.7 , 0.1 ,     0.1 , 0.1 , 0.1 , 0.7 ,]
        mx61:   [0.61, 0.13, 0.13, 0.13,    0.13, 0.61, 0.13, 0.13,     0.13, 0.13, 0.61, 0.13,     0.13, 0.13, 0.13, 0.61,]
        mx55:   [0.55, 0.15, 0.15, 0.15,    0.15, 0.55, 0.15, 0.15,     0.15, 0.15, 0.55, 0.15,     0.15, 0.15, 0.15, 0.55,]
        mx49:   [0.49, 0.17, 0.17, 0.17,    0.17, 0.49, 0.17, 0.17,     0.17, 0.17, 0.49, 0.17,     0.17, 0.17, 0.17, 0.49,]
        mx40:   [0.4 , 0.2 , 0.2 , 0.2 ,    0.2 , 0.4 , 0.2 , 0.2 ,     0.2 , 0.2 , 0.4 , 0.2 ,     0.2 , 0.2 , 0.2 , 0.4 ,]
        mx31:   [0.31, 0.23, 0.23, 0.23,    0.23, 0.31, 0.23, 0.23,     0.23, 0.23, 0.31, 0.23,     0.23, 0.23, 0.23, 0.31,]
    </rosparam>
    <rosparam>
        waited_srvs: 
            mode0: ['/lti_rviz/reload_shaders']
            mode1: ['/rosbag_record/get_loggers', '/lti_rviz/reload_shaders']
    </rosparam>

    <rosparam>
        predefined_poses: 
            door1:      
                x: 11.78
                y: 1.85
                yaw: 1.57079
            livroom1:   
                x: 8.7
                y: 20.0
                yaw: 1.57079
            livroom2:   
                x: 7.71
                y: 17.15
                yaw: -1.57079
            office1:   
                x: 17.1
                y: 15.5
                yaw: 0.0
            bathroom1:   
                x: 3.4
                y: 1.9
                yaw: 1.57079
            music1:   
                x: 13.8
                y: 23.4
                yaw: 0.0
            bedroom1:   
                x: 14.5
                y: 19.4
                yaw: 3.14159
            door2:
                x: 9.0
                y: 3.4
                yaw: 1.57079
            kitchen1:
                x: 8.41
                y: 9.13
                yaw: -1.57079
            storage1:
                x: 13.01
                y: 9.71
                yaw: 1.57079
            storage2:
                x: 15.26
                y: 10.26
                yaw: 0.0
            storage3:
                x: 15.27
                y: 8.66
                yaw: -1.57079
            out:
                x: 1000.0
                y: 1000.0
                yaw: 0.0
    </rosparam>
    
    <node if="$(arg record_video)" name="vlc_recorded" pkg="novelti" type="record_screen.sh" />
    
    <!-- rviz window for real experiment -->
    <node if="$(arg real_robot)" name="robot_rviz" pkg="rviz" type="rviz"  output="screen" args="-d $(find novelti)/rviz/robot.rviz" />
    <!-- Recording -->
    <node if="$(arg bag)"  pkg="rosbag" type="record" name="rosbag_record" required="true"
            args="-O $(arg bagpath) /rosout /map /pose_intended /pose_current /pose_best /pose_inferred /cmd_intended /cmd_detected /pdf /map_divided /parameters /pose_arrived">
    </node>
    <arg name="waited_srvs_name" default="/waited_srvs/mode$(arg bag)" />
    <node if="$(arg bag)"  pkg="novelti" type="node_param_publisher.py" name="node_param_publisher">
        <param name="rosbag_node_name" value="rosbag_record" />
        <!-- remapped parameters (by default not save on param server-->
        <param name="map" value="$(arg map)" />
        <param name="mx" value="$(arg mx)" />
        <param name="path" value="$(arg path)" />
        <param name="popt" value="$(arg popt)" />
        <param name="bag" value="$(arg bag)" />
        <param name="waited_srvs_name" value="$(arg waited_srvs_name)" />
        <param name="rviz" value="$(arg rviz)" />
        <param name="commit"     command="git --git-dir=$(find novelti)/../.git --work-tree=$(find novelti)/..  log --format='%H' -n 1" />
        <param name="commit_log" command="git --git-dir=$(find novelti)/../.git --work-tree=$(find novelti)/..  log -n 1" />
        <param name="comp_id" command="cat /var/lib/dbus/machine-id" /> <!-- http://0pointer.de/blog/projects/ids.html -->
    </node>

    <!-- Real robot or model-->
    <node if="$(arg real_robot)" pkg="novelti" type="node_mediator.py" name="node_mediator" 
            output="screen" required="true">
        <remap from="/pose_desired" to="/pose_best" />
        <remap from="~goal_x" to="/predefined_poses/$(arg dst)/x" />
        <remap from="~goal_y" to="/predefined_poses/$(arg dst)/y" />
        <remap from="~goal_yaw" to="/predefined_poses/$(arg dst)yaw" />
        <remap from="~goal2_x" to="/predefined_poses/$(arg dst2)/x" />
        <remap from="~goal2_y" to="/predefined_poses/$(arg dst2)/y" />
        <remap from="~goal2_yaw" to="/predefined_poses/$(arg dst2)yaw" />
        <param name="pub_random_goal" value="$(arg pub_random_goal)" />
        <param name="map" value="$(find novelti)/map/$(arg map).map" />
        <param name="resolution" value="0.1" />
        <param name="real_robot" value="$(arg real_robot)" />
        <remap from="/map" to="/map_inflated" />
        <remap from="~synced_nodes" to="/synced_nodes/real_robot$(arg real_robot)"/>
        <rosparam>
            waited_srvs:  ['/lti_rviz/reload_shaders']
        </rosparam>
    </node>

    <!-- <remap from="/amcl/initial_pose_x" to="/predefined_poses/$(arg start)/x" />
    <remap from="/amcl/initial_pose_y" to="/predefined_poses/$(arg start)/y" />
    <remap from="/amcl/initial_pose_a" to="/predefined_poses/$(arg start)/yaw" /> -->

    <include if="$(arg real_robot)" file="$(find anna)/launch/main.launch">
        <arg name="ui1" value="none" />
        <arg name="ui2" value="none" />
        <arg name="ui3" value="none" />
        <arg name="rviz" value="0" />
        
        <!--arg name="init_x" value="none" />
        <arg name="init_y" value="none" />
        <arg name="init_z" value="none" /-->

        <!--remap from="~init_x" to="/predefined_poses/$(arg start)/x" />
        <remap from="~init_y" to="/predefined_poses/$(arg start)/y" />
        <remap from="~init_yaw" to="/predefined_poses/$(arg start)/yaw" /-->
        
        <arg name="assist" value="0" />
        <arg name="auto" value="1" />
        <arg name="cliff" value="0" />
        <arg name="map_file" value="$(find ak_labs)/pgm/AH.yaml" />
    </include>
    
    <node unless="$(arg real_robot)" pkg="novelti" type="robot_model" name="robot_model" output="screen" required="true" >
        <remap from="/pose_desired" to="/pose_best" />
        <param name="max_vel"     value="$(arg vel)" />
        <param name="max_twist"   value="$(arg twist)"/>
        <param name="pub_period"  value="$(arg trobot)" />
    </node>

    <!-- Real human or model -->
    <node unless="$(arg real_human)" pkg="novelti" type="human_model" name="human_model" output="screen" required="true" > 
        <param name="new_goal"      value="$(arg new_goal_topic)"/>
    </node>
    <node if="$(arg real_human)" pkg="novelti" type="node_keyboard_commander.py" name="keyboard_commander" output="screen" required="true">
        <rosparam>
            key_mappings: ['y','b','g','r']   <!-- yellow, blue, green, red -->
            new_goal_key: '`'
        </rosparam>
        <param name="new_goal"      value="$(arg new_goal_topic)"/>
    </node>

    <!-- Real interface or model -->
    <node pkg="novelti" type="node_lti_model.py" name="lti_model" output="screen" required="true" unless="$(arg real_interface)">
        <remap from="~interface_matrix" to="/$(arg mx)"/>
        <param unless="$(arg real_human)"     name="delay" value="0.0"/>
        <param if="$(arg real_human)" name="delay" value="$(arg delay)"/>
        <param name="period" value="$(arg period)" />
    </node>
    
    
    <!-- Shared Control -->
    <arg name="debug_inference" default="0" />
    <arg     if="$(arg debug_inference)" name="prefix_inference" default="xterm -geometry 170x30+10+20 -e gdb -x=$(find novelti)/debug/gdb_inference_unit - -args" />
    <arg unless="$(arg debug_inference)" name="prefix_inference" default="" />    
    
    <group unless="$(arg single_node)">
        <node pkg="novelti" type="inference_unit" name="inference_unit" output="screen" required="true" launch-prefix="$(arg prefix_inference)">
            <remap from="~interface_matrix" to="/$(arg mx)"/>
            <param name="inf/thresh_high" value="$(arg prob_thresh_high)" />
            <param name="inf/thresh_low"  value="$(arg prob_thresh_low)" />
            <param name="inf/eps"         value="$(arg prob_eps)" />
            <param name="inf/interest_area_coef" value="$(arg iarea_k)" />
            <rosparam param="inf/view_sizes"  subst_value="true">$(arg view_sizes)</rosparam>
            <rosparam param="inf/smooth_rads" subst_value="true">$(arg smooth_rads)</rosparam>
            <rosparam if="$(arg use_pois)" param="pois" > <!-- x1, y1, sigma1, k1,    x2, y2, sigma2, k2, ...     118, 19, 5.0, 1.0,    171,155, 15.0, 2.5,     34,19, 20.0, 1.5,     138,234, 25.0, 3.0,     145,194, 10.0, 2.0,] -->
                [   #x1,y1,  sigma1, k1,
                    87,200,  0.8,    2.0,   #livroom1
                    118,19,  1.1,    1.7,   #door1
                    171,155, 1.3,    2.4,   #office1
                    34,19,   0.9,    2.1,   #bathroom1
                    138,234, 1.0,    1.9,   #music1
                    145,194, 1.3,    1.7,   #bedroom1
                    90,34,   1.2,    1.5,   #door2
                    84,91,   1.2,    2.1,   #kitchen1
                    130,97,  0.9,    1.8,   #storage1
                    153,103, 0.9,    1.6,   #storage2
                    153,87,  0.9,    1.6    #storage3
                ] 
            </rosparam>
        </node>
        <node pkg="novelti" type="best_pose_finder" name="best_pose_finder" output="screen" required="true">
            <param name="pos/method"      value="$(arg pos)" />
            <param name="pos/max_vel"     value="$(arg vel)" />
            <param name="pos/max_twist"   value="$(arg twist)" />
            <param name="pos/safety_coef" value="$(arg ksafe)" />
            <param name="pos/period"      value="$(arg delay)" />
        </node>
        <node pkg="novelti" type="map_divider" name="map_divider" output="screen" required="true">
            <remap from="~probs_optimal"    to="/probs_optimal/$(arg popt)"/>
            <param name="div/method"            value="$(arg div)" />
        </node>
    </group>

    <group if="$(arg single_node)">
        <node pkg="novelti" type="novelti_shared_control" name="novelti_shared_control" output="screen" required="true">
            <param name="inf/thresh_high"       value="$(arg prob_thresh_high)" />
            <param name="inf/thresh_low"        value="$(arg prob_thresh_low)" />
            <param name="inf/eps"               value="$(arg prob_eps)" />
            <param name="inf/interest_area_coef" value="$(arg iarea_k)" />
            <rosparam param="inf/view_sizes"  subst_value="true">$(arg view_sizes)</rosparam>
            <rosparam param="inf/smooth_rads" subst_value="true">$(arg smooth_rads)</rosparam>
            <remap from="~interface_matrix"     to="/$(arg mx)"/>
            <param name="pos/method"            value="$(arg pos)" />
            <param name="pos/max_vel"           value="$(arg vel)" />
            <param name="pos/max_twist"         value="$(arg twist)" />
            <param name="pos/safety_coef"       value="$(arg ksafe)" />
            <param name="pos/period"            value="$(arg delay)" />
            <param name="div/method"            value="$(arg div)" />
            <remap from="~probs_optimal"        to="/probs_optimal/$(arg popt)"/>
            <rosparam if="$(arg use_pois)" param="pois" > <!-- x1, y1, sigma1, k1,    x2, y2, sigma2, k2, ...     118, 19, 5.0, 1.0,    171,155, 15.0, 2.5,     34,19, 20.0, 1.5,     138,234, 25.0, 3.0,     145,194, 10.0, 2.0,] -->
                [   #x1,y1,  sigma1, k1,
                    87,200,  0.8,    2.0,   #livroom1
                    118,19,  1.1,    1.7,   #door1
                    171,155, 1.3,    2.4,   #office1
                    34,19,   0.9,    2.1,   #bathroom1
                    138,234, 1.0,    1.9,   #music1
                    145,194, 1.3,    1.7,   #bedroom1
                    90,34,   1.2,    1.5,   #door2
                    84,91,   1.2,    2.1,   #kitchen1
                    130,97,  0.9,    1.8,   #storage1
                    153,103, 0.9,    1.6,   #storage2
                    153,87,  0.9,    1.6    #storage3
                ] 
            </rosparam>
        </node>
    </group>

    <node if="$(arg experiment)" pkg="novelti" type="node_experimentator.py" name="experimentator" output="screen" required="true">
        <param name="map" value="$(find novelti)/map/$(arg map).map" />
        <remap from="~poses" to="/paths/$(arg path)"/>
        <param name="resol" value="$(arg resol)" />
        <param name="n_runs" value="$(arg tries)" />
        <param name="success_file" value="$(arg bagpath).success" />
        <remap from="~waited_srvs" to="$(arg waited_srvs_name)"/>
        <rosparam if="$(arg single_node)">
            synced_nodes: ['/novelti_shared_control', '/robot_model', '/lti_model', '/keyboard_commander', ]
        </rosparam>
        <rosparam unless="$(arg single_node)">
            synced_nodes: ['/inference_unit', '/best_pose_finder', '/map_divider', '/lti_model', 'robot_model', '/human_model', ]
        </rosparam>
    </node>    
    
    <!-- Visualization -->
    <include file="$(find novelti)/launch/rviz_$(arg rviz).launch"/>
    


   <!-- Monitoring - ->
    <node if="$(arg monitor)" pkg="novelti" type="node_monitor.py" name="monitor" output="screen">
        <param name="output_prefix" value="$(arg monitor_output_prefix)"/>
    </node>-->

</launch>
